// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementAPI.Data;

#nullable disable

namespace UserManagementAPI.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserManagementAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "an.nguyen@example.com",
                            FirstName = "Nguyễn",
                            LastName = "Văn An",
                            PhoneNumber = "0912345678",
                            ZipCode = "700000"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bich.tran@example.com",
                            FirstName = "Trần",
                            LastName = "Thị Bích",
                            PhoneNumber = "0987654321",
                            ZipCode = "100000"
                        },
                        new
                        {
                            Id = 3,
                            Email = "hung.pham@example.com",
                            FirstName = "Phạm",
                            LastName = "Thanh Hùng",
                            PhoneNumber = "0905123456",
                            ZipCode = "550000"
                        },
                        new
                        {
                            Id = 4,
                            Email = "nhung.le@example.com",
                            FirstName = "Lê",
                            LastName = "Hồng Nhung",
                            PhoneNumber = "0933123456",
                            ZipCode = "600000"
                        },
                        new
                        {
                            Id = 5,
                            Email = "tuan.dang@example.com",
                            FirstName = "Đặng",
                            LastName = "Minh Tuấn",
                            PhoneNumber = "0922123456",
                            ZipCode = "300000"
                        },
                        new
                        {
                            Id = 6,
                            Email = "mai.bui@example.com",
                            FirstName = "Bùi",
                            LastName = "Thị Mai",
                            PhoneNumber = "0978899001",
                            ZipCode = "120000"
                        },
                        new
                        {
                            Id = 7,
                            Email = "anh.hoang@example.com",
                            FirstName = "Hoàng",
                            LastName = "Anh Tuấn",
                            PhoneNumber = "0967788992",
                            ZipCode = "150000"
                        },
                        new
                        {
                            Id = 8,
                            Email = "huy.vu@example.com",
                            FirstName = "Vũ",
                            LastName = "Quang Huy",
                            PhoneNumber = "0911223344",
                            ZipCode = "250000"
                        },
                        new
                        {
                            Id = 9,
                            Email = "lan.ly@example.com",
                            FirstName = "Lý",
                            LastName = "Thị Lan",
                            PhoneNumber = "0933445566",
                            ZipCode = "400000"
                        },
                        new
                        {
                            Id = 10,
                            Email = "cong.do@example.com",
                            FirstName = "Đỗ",
                            LastName = "Thành Công",
                            PhoneNumber = "0944556677",
                            ZipCode = "350000"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
